# Created this action based on information found in:
# - <https://docs.platformio.org/en/latest/integration/ci/github-actions.html>
# - <https://docs.github.com/en/free-pro-team@latest/actions/quickstart>
name: build-platformio
on: 
  push:
    paths-ignore:
    - 'docs/**'
  repository_dispatch:
    types: [rebuild]
  
env:
  iotsa_ref: develop

jobs:
  #
  # Job#1 - Build all applications for all supported platforms, upload binaries as artifacts
  #
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        board:
        - lolin32
        - pico32
        - esp32thing
        - esp32dev
        application:
        - lissabonController
        - lissabonDimmer
        - lissabonExample
        - lissabonLedstrip
        - lissabonRemote
        - lissabonSwitch
        build_flags: [""]
#        Extra options/settings.
#        include:
#        For esp8266 we need to manually exclude esp32_https_server and esp32_https_server_compat. Probably bug in libdeps of platformio
#        - board: nodemcuv2
#          pio_extra_args: --project-option="lib_ignore=esp32_https_server_compat"
#        Extra build: Led with HTTPS
#        - application: Led
#          build_flags: -DIOTSA_WITH_HTTPS
#          board: nodemcuv2
#          pio_extra_args: --project-option="lib_ignore=esp32_https_server_compat"
#        - application: Led
#          build_flags: -DIOTSA_WITH_HTTPS
#          board: esp32thing
#        Extra build: Led with COAP
#        - application: Led
#          build_flags: -DIOTSA_WITH_COAP
#          board: nodemcuv2
#          pio_extra_args: --project-option="lib_ignore=esp32_https_server_compat"
#        - application: Led
#          build_flags: -DIOTSA_WITH_COAP
#          board: esp32thing
#        Extra build: Led with only COAP support (no web, no rest, no http/s)
#        - application: Led
#          build_flags: -DIOTSA_WITH_COAP -DIOTSA_WITHOUT_WEB -DIOTSA_WITHOUT_REST -DIOTSA_WITHOUT_HTTP -DIOTSA_WITHOUT_HTTPS -DIOTSA_WITH_PLACEHOLDERS
#          board: nodemcuv2
#          pio_extra_args: --project-option="lib_ignore=esp32_https_server_compat"
#        - application: Led
#          build_flags: -DIOTSA_WITH_COAP -DIOTSA_WITHOUT_WEB -DIOTSA_WITHOUT_REST -DIOTSA_WITHOUT_HTTP -DIOTSA_WITHOUT_HTTPS -DIOTSA_WITH_PLACEHOLDERS
#          board: esp32thing
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

    - name: Set up Python
      uses: actions/setup-python@v2

    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
        pio platform install --with-package framework-arduinoespressif8266 espressif8266
        pio platform install --with-package framework-arduinoespressif32 espressif32

    - name: Install library dependencies
      run: |
        pio lib -g install "https://github.com/cwi-dis/iotsa.git#${{ env.iotsa_ref }}"

    - name: Run PlatformIO
      run: |
        pio ci --lib="." --project-option="lib_ldf_mode=deep+" ${{ matrix.pio_extra_args }} --board=${{ matrix.board }} --keep-build-dir
      env:
        PLATFORMIO_CI_SRC: ${{ matrix.application }}
        PLATFORMIO_BUILD_FLAGS: ${{ matrix.build_flags }}
        
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.application }}-${{ matrix.board }}.bin
        path: .pio/build/${{ matrix.board }}/firmware.bin        
 